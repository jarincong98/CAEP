%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'Model_SOECESPricesMP';
M_.dynare_version = '6.3';
oo_.dynare_version = '6.3';
options_.dynare_version = '6.3';
%
% Some global variables initialization
%
global_initialization;
options_.nointeractive = true;
M_.exo_names = cell(7,1);
M_.exo_names_tex = cell(7,1);
M_.exo_names_long = cell(7,1);
M_.exo_names(1) = {'eps_A'};
M_.exo_names_tex(1) = {'\epsilon^A'};
M_.exo_names_long(1) = {'TFP Shock'};
M_.exo_names(2) = {'eps_P_star'};
M_.exo_names_tex(2) = {'\epsilon^{P^{\star}}'};
M_.exo_names_long(2) = {'Foreign CPI Shock'};
M_.exo_names(3) = {'eps_Pim_star'};
M_.exo_names_tex(3) = {'\epsilon^{P^{im,\star}}'};
M_.exo_names_long(3) = {'Foregin imports CPI Shock'};
M_.exo_names(4) = {'eps_y_star'};
M_.exo_names_tex(4) = {'\epsilon^{y^{\star}}'};
M_.exo_names_long(4) = {'Foregin Demand Shock'};
M_.exo_names(5) = {'eps_C'};
M_.exo_names_tex(5) = {'\epsilon^C'};
M_.exo_names_long(5) = {'Consumption Shock'};
M_.exo_names(6) = {'eps_I'};
M_.exo_names_tex(6) = {'\epsilon^I'};
M_.exo_names_long(6) = {'Investment Shock'};
M_.exo_names(7) = {'eps_inom'};
M_.exo_names_tex(7) = {'\epsilon^{i^{nom}}'};
M_.exo_names_long(7) = {'Nominal Rate Shock'};
M_.endo_names = cell(45,1);
M_.endo_names_tex = cell(45,1);
M_.endo_names_long = cell(45,1);
M_.endo_names(1) = {'K'};
M_.endo_names_tex(1) = {'K'};
M_.endo_names_long(1) = {'Aggregate Capital'};
M_.endo_names(2) = {'C'};
M_.endo_names_tex(2) = {'C'};
M_.endo_names_long(2) = {'Aggregate Consumption'};
M_.endo_names(3) = {'W'};
M_.endo_names_tex(3) = {'W'};
M_.endo_names_long(3) = {'Nominal Wage'};
M_.endo_names(4) = {'P_d'};
M_.endo_names_tex(4) = {'P^d'};
M_.endo_names_long(4) = {'Domestic CPI'};
M_.endo_names(5) = {'P_im'};
M_.endo_names_tex(5) = {'P^{im}'};
M_.endo_names_long(5) = {'Imported CPI'};
M_.endo_names(6) = {'s'};
M_.endo_names_tex(6) = {'s'};
M_.endo_names_long(6) = {'Nominal Exchange Rate'};
M_.endo_names(7) = {'I'};
M_.endo_names_tex(7) = {'I'};
M_.endo_names_long(7) = {'Aggregate Investment'};
M_.endo_names(8) = {'P_c'};
M_.endo_names_tex(8) = {'P^c'};
M_.endo_names_long(8) = {'Consumption Price'};
M_.endo_names(9) = {'lambda'};
M_.endo_names_tex(9) = {'\lambda'};
M_.endo_names_long(9) = {'Lagrange Multiplier HH'};
M_.endo_names(10) = {'h'};
M_.endo_names_tex(10) = {'h'};
M_.endo_names_long(10) = {'Aggregate Labor'};
M_.endo_names(11) = {'P_i'};
M_.endo_names_tex(11) = {'P^i'};
M_.endo_names_long(11) = {'Investment Price'};
M_.endo_names(12) = {'R_K'};
M_.endo_names_tex(12) = {'R^k'};
M_.endo_names_long(12) = {'Return on Capital'};
M_.endo_names(13) = {'R_star'};
M_.endo_names_tex(13) = {'R^{\star}'};
M_.endo_names_long(13) = {'Relevant Foreign Interest Rate'};
M_.endo_names(14) = {'q_d'};
M_.endo_names_tex(14) = {'q^d'};
M_.endo_names_long(14) = {'Relative demand price'};
M_.endo_names(15) = {'q_cd'};
M_.endo_names_tex(15) = {'q^{c,d}'};
M_.endo_names_long(15) = {'Relative domestic consumption price'};
M_.endo_names(16) = {'q_cim'};
M_.endo_names_tex(16) = {'q^{c,im}'};
M_.endo_names_long(16) = {'Relative imported consumption price'};
M_.endo_names(17) = {'q_id'};
M_.endo_names_tex(17) = {'q^{i,d}'};
M_.endo_names_long(17) = {'Relative domestic investment price'};
M_.endo_names(18) = {'q_iim'};
M_.endo_names_tex(18) = {'q^{i,im}'};
M_.endo_names_long(18) = {'Relative imported investment price'};
M_.endo_names(19) = {'q_ex'};
M_.endo_names_tex(19) = {'q^{ex}'};
M_.endo_names_long(19) = {'Relative price of exports'};
M_.endo_names(20) = {'EX'};
M_.endo_names_tex(20) = {'EX'};
M_.endo_names_long(20) = {'Aggregate Real Exports'};
M_.endo_names(21) = {'IM'};
M_.endo_names_tex(21) = {'IM'};
M_.endo_names_long(21) = {'Aggregate Real Imports'};
M_.endo_names(22) = {'NX'};
M_.endo_names_tex(22) = {'NX'};
M_.endo_names_long(22) = {'Real Net Exports'};
M_.endo_names(23) = {'B_star'};
M_.endo_names_tex(23) = {'B^{\star}'};
M_.endo_names_long(23) = {'Foreign Debt (bonds)'};
M_.endo_names(24) = {'GDP'};
M_.endo_names_tex(24) = {'GDP'};
M_.endo_names_long(24) = {'GDP'};
M_.endo_names(25) = {'GDP_ann'};
M_.endo_names_tex(25) = {'GDP^{Ann}'};
M_.endo_names_long(25) = {'Annual GDP'};
M_.endo_names(26) = {'TO'};
M_.endo_names_tex(26) = {'TO'};
M_.endo_names_long(26) = {'Terms of Trade'};
M_.endo_names(27) = {'q_im'};
M_.endo_names_tex(27) = {'q^{im}'};
M_.endo_names_long(27) = {'Relative price of imports'};
M_.endo_names(28) = {'Upsilon_d'};
M_.endo_names_tex(28) = {'\Upsilon^d'};
M_.endo_names_long(28) = {'Domestic Rotemberg Adjustment Cost'};
M_.endo_names(29) = {'Upsilon_im'};
M_.endo_names_tex(29) = {'\Upsilon^{im}'};
M_.endo_names_long(29) = {'Investment Rotemberg Adjustment Cost'};
M_.endo_names(30) = {'Pi_d'};
M_.endo_names_tex(30) = {'\pi^d'};
M_.endo_names_long(30) = {'Domestic Inflation'};
M_.endo_names(31) = {'Pi_im'};
M_.endo_names_tex(31) = {'\pi^{im}'};
M_.endo_names_long(31) = {'Imported Inflation'};
M_.endo_names(32) = {'mu'};
M_.endo_names_tex(32) = {'\partial u'};
M_.endo_names_long(32) = {'Marginal Utility'};
M_.endo_names(33) = {'MC'};
M_.endo_names_tex(33) = {'MC'};
M_.endo_names_long(33) = {'Nominal Marginal Cost'};
M_.endo_names(34) = {'rer'};
M_.endo_names_tex(34) = {'rer'};
M_.endo_names_long(34) = {'Real Exchange Rate'};
M_.endo_names(35) = {'WL'};
M_.endo_names_tex(35) = {'WL'};
M_.endo_names_long(35) = {'Aggregate Wage'};
M_.endo_names(36) = {'P_star'};
M_.endo_names_tex(36) = {'P^{\star}'};
M_.endo_names_long(36) = {'Foreign CPI'};
M_.endo_names(37) = {'A'};
M_.endo_names_tex(37) = {'A'};
M_.endo_names_long(37) = {'TFP'};
M_.endo_names(38) = {'Pim_star'};
M_.endo_names_tex(38) = {'P^{im,\star}'};
M_.endo_names_long(38) = {'Imports Price in Forein Currency'};
M_.endo_names(39) = {'Z_C'};
M_.endo_names_tex(39) = {'Z^c'};
M_.endo_names_long(39) = {'Consumption Combination Efficiency'};
M_.endo_names(40) = {'Z_I'};
M_.endo_names_tex(40) = {'Z^i'};
M_.endo_names_long(40) = {'Investment Combination Efficiency'};
M_.endo_names(41) = {'y_star'};
M_.endo_names_tex(41) = {'y^{\star}'};
M_.endo_names_long(41) = {'Foreign Demand'};
M_.endo_names(42) = {'i_nom'};
M_.endo_names_tex(42) = {'i^{nom}'};
M_.endo_names_long(42) = {'Nominal Interest Rate'};
M_.endo_names(43) = {'Y_obs'};
M_.endo_names_tex(43) = {'Y^{obs}'};
M_.endo_names_long(43) = {'Observable GDP'};
M_.endo_names(44) = {'C_obs'};
M_.endo_names_tex(44) = {'C^{obs}'};
M_.endo_names_long(44) = {'Observable Consumption'};
M_.endo_names(45) = {'I_obs'};
M_.endo_names_tex(45) = {'I^{obs}'};
M_.endo_names_long(45) = {'Observable Investment'};
M_.endo_partitions = struct();
M_.param_names = cell(37,1);
M_.param_names_tex = cell(37,1);
M_.param_names_long = cell(37,1);
M_.param_names(1) = {'sigma'};
M_.param_names_tex(1) = {'\sigma'};
M_.param_names_long(1) = {'EIS'};
M_.param_names(2) = {'delta'};
M_.param_names_tex(2) = {'\delta'};
M_.param_names_long(2) = {'Capital Depreciation'};
M_.param_names(3) = {'beta'};
M_.param_names_tex(3) = {'\beta'};
M_.param_names_long(3) = {'Discount Factor'};
M_.param_names(4) = {'psi_h'};
M_.param_names_tex(4) = {'\psi^h'};
M_.param_names_long(4) = {'Labor Disutility'};
M_.param_names(5) = {'eta'};
M_.param_names_tex(5) = {'\eta'};
M_.param_names_long(5) = {'Inv. Frisch'};
M_.param_names(6) = {'phi_K'};
M_.param_names_tex(6) = {'\phi^k'};
M_.param_names_long(6) = {'Capital Adj. Cost'};
M_.param_names(7) = {'alpha'};
M_.param_names_tex(7) = {'\alpha'};
M_.param_names_long(7) = {'Elasticity of capital in output'};
M_.param_names(8) = {'theta_c'};
M_.param_names_tex(8) = {'\theta^c'};
M_.param_names_long(8) = {'Elasticity of Substitution Consumption'};
M_.param_names(9) = {'theta_i'};
M_.param_names_tex(9) = {'\theta^i'};
M_.param_names_long(9) = {'Elasticity of Substitution Investment'};
M_.param_names(10) = {'omega_c'};
M_.param_names_tex(10) = {'\omega^c'};
M_.param_names_long(10) = {'Home bias consumption'};
M_.param_names(11) = {'omega_i'};
M_.param_names_tex(11) = {'\omega^i'};
M_.param_names_long(11) = {'Home bias Investment'};
M_.param_names(12) = {'theta_ex'};
M_.param_names_tex(12) = {'\theta^{ex}'};
M_.param_names_long(12) = {'Elasticity of Substitution Exports'};
M_.param_names(13) = {'B_star_ss'};
M_.param_names_tex(13) = {'B^{\star}_{ss}'};
M_.param_names_long(13) = {'Foreign Bonds SS'};
M_.param_names(14) = {'y_star_ss'};
M_.param_names_tex(14) = {'y^{\star}_{ss}'};
M_.param_names_long(14) = {'Foreign Demand SS'};
M_.param_names(15) = {'A_ss'};
M_.param_names_tex(15) = {'A_ss'};
M_.param_names_long(15) = {'TFP SS'};
M_.param_names(16) = {'P_star_ss'};
M_.param_names_tex(16) = {'P^{\star}_{ss}'};
M_.param_names_long(16) = {'Foreign CPI SS'};
M_.param_names(17) = {'rho_C'};
M_.param_names_tex(17) = {'\rho_c'};
M_.param_names_long(17) = {'Persistence Consumption Shock'};
M_.param_names(18) = {'rho_I'};
M_.param_names_tex(18) = {'\rho_i'};
M_.param_names_long(18) = {'Persistence Investment Shock'};
M_.param_names(19) = {'phi_q'};
M_.param_names_tex(19) = {'\phi^q'};
M_.param_names_long(19) = {'Rotemberg Domestic Price Adjustment Cost'};
M_.param_names(20) = {'phi_im'};
M_.param_names_tex(20) = {'\phi^{im}'};
M_.param_names_long(20) = {'Rotemberg Imports Price Adjustment Cost'};
M_.param_names(21) = {'theta_im'};
M_.param_names_tex(21) = {'\theta^{im}'};
M_.param_names_long(21) = {'Elasticity of substitution Imports'};
M_.param_names(22) = {'Pim_star_ss'};
M_.param_names_tex(22) = {'P^{im\star}_{ss}'};
M_.param_names_long(22) = {'Price of imports in FC SS'};
M_.param_names(23) = {'theta_d'};
M_.param_names_tex(23) = {'\theta^d'};
M_.param_names_long(23) = {'Elasticity of Substitution Domestic Goods'};
M_.param_names(24) = {'Z_C_ss'};
M_.param_names_tex(24) = {'Z^c_{ss}'};
M_.param_names_long(24) = {'Consumption shock SS'};
M_.param_names(25) = {'Z_I_ss'};
M_.param_names_tex(25) = {'Z^i_{ss}'};
M_.param_names_long(25) = {'Investment Shock SS'};
M_.param_names(26) = {'rho_A'};
M_.param_names_tex(26) = {'\rho_A'};
M_.param_names_long(26) = {'Persistence TFP'};
M_.param_names(27) = {'rho_Pim_star'};
M_.param_names_tex(27) = {'\rho_{P^{im\star}}'};
M_.param_names_long(27) = {'Persistence Imports Price in FC'};
M_.param_names(28) = {'rho_y_star'};
M_.param_names_tex(28) = {'\rho_{y^{\star}}'};
M_.param_names_long(28) = {'Persistence Foreign Demand'};
M_.param_names(29) = {'phi_b'};
M_.param_names_tex(29) = {'\phi^b'};
M_.param_names_long(29) = {'SGU Parameter'};
M_.param_names(30) = {'rho_P_star'};
M_.param_names_tex(30) = {'\rho_{P^{\star}}'};
M_.param_names_long(30) = {'Persistence Foreign CPI'};
M_.param_names(31) = {'R_star_ss'};
M_.param_names_tex(31) = {'R^{\star}_{ss}'};
M_.param_names_long(31) = {'Foreign interest rate SS'};
M_.param_names(32) = {'i_nom_ss'};
M_.param_names_tex(32) = {'i^{nom}_{ss}'};
M_.param_names_long(32) = {'Nominal rate SS'};
M_.param_names(33) = {'GDP_ss'};
M_.param_names_tex(33) = {'DGP_{ss}'};
M_.param_names_long(33) = {'GDP SS'};
M_.param_names(34) = {'P_c_ss'};
M_.param_names_tex(34) = {'P^c_{ss}'};
M_.param_names_long(34) = {'Consumption Price SS'};
M_.param_names(35) = {'rho_inom'};
M_.param_names_tex(35) = {'\rho_{i^{nom}}'};
M_.param_names_long(35) = {'Persistence Nominal Rate'};
M_.param_names(36) = {'phi_y'};
M_.param_names_tex(36) = {'\phi^y'};
M_.param_names_long(36) = {'Taylor Rule GDP Gap'};
M_.param_names(37) = {'phi_P'};
M_.param_names_tex(37) = {'\phi^p'};
M_.param_names_long(37) = {'Taylor Rule Inflation Gap'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 7;
M_.endo_nbr = 45;
M_.param_nbr = 37;
M_.orig_endo_nbr = 45;
M_.aux_vars = [];
options_.varobs = cell(3, 1);
options_.varobs(1)  = {'Y_obs'};
options_.varobs(2)  = {'C_obs'};
options_.varobs(3)  = {'I_obs'};
options_.varobs_id = [ 43 44 45  ];
M_.Sigma_e = zeros(7, 7);
M_.Correlation_matrix = eye(7, 7);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.nonzero_hessian_eqs = [2 3 4 5 6 7 8 9 10 12 13 14 15 16 18 19 21 22 23 24 25 26 27 28 30 31 32 34 35 36 37 38 39 40 41 42];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.eq_nbr = 45;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 1 13 58;
 0 14 59;
 0 15 0;
 2 16 60;
 3 17 61;
 0 18 62;
 0 19 0;
 0 20 63;
 0 21 64;
 0 22 0;
 0 23 65;
 0 24 66;
 4 25 0;
 0 26 67;
 0 27 0;
 0 28 0;
 0 29 0;
 0 30 0;
 0 31 0;
 0 32 0;
 0 33 0;
 0 34 0;
 5 35 0;
 0 36 0;
 0 37 0;
 0 38 0;
 0 39 68;
 0 40 0;
 0 41 0;
 0 42 0;
 0 43 0;
 0 44 0;
 0 45 0;
 0 46 0;
 0 47 0;
 6 48 69;
 7 49 0;
 8 50 0;
 9 51 0;
 10 52 0;
 11 53 0;
 12 54 0;
 0 55 0;
 0 56 0;
 0 57 0;]';
M_.nstatic = 25;
M_.nfwrd   = 8;
M_.npred   = 8;
M_.nboth   = 4;
M_.nsfwrd   = 12;
M_.nspred   = 12;
M_.ndynamic   = 20;
M_.dynamic_tmp_nbr = [38; 64; 15; 0; ];
M_.equations_tags = {
  1 , 'name' , 'Taylor rule' ;
  2 , 'name' , 'Euler equation bonds' ;
  3 , 'name' , 'RER' ;
  4 , 'name' , 'Capital Law of Motion' ;
  5 , 'name' , 'lambda' ;
  6 , 'name' , 'Labor supply' ;
  7 , 'name' , 'Euler Equation for K' ;
  8 , 'name' , 'Euler Equation for B_star' ;
  9 , 'name' , 'R_star' ;
  10 , 'name' , 'Marginal cost' ;
  11 , 'name' , 'mu' ;
  12 , 'name' , 'MPK' ;
  13 , 'name' , 'MPL' ;
  14 , 'name' , 'Optimal price' ;
  15 , 'name' , 'Price adjustment P_d' ;
  16 , 'name' , 'Domestic profits' ;
  17 , 'name' , 'Market clearing' ;
  18 , 'name' , 'Export Demand' ;
  19 , 'name' , 'GDP' ;
  20 , 'name' , 'GDP' ;
  21 , 'name' , 'Demand for dom interm in C' ;
  22 , 'name' , 'Demand for imports in C' ;
  23 , 'name' , 'P_c' ;
  24 , 'name' , 'Demand for dom interm in I' ;
  25 , 'name' , 'Demand for imports in I' ;
  26 , 'name' , 'P_i' ;
  27 , 'name' , 'Optimal price P_im' ;
  28 , 'name' , 'Price adjustment cost P_im' ;
  29 , 'name' , 'Market clearing for imports' ;
  30 , 'name' , 'Profits of importers' ;
  31 , 'name' , 'Exports' ;
  32 , 'name' , 'Imports' ;
  33 , 'name' , 'Trade Balance' ;
  34 , 'name' , 'Trade Balance Equilibrium' ;
  35 , 'name' , 'TO' ;
  36 , 'name' , 'WL' ;
  37 , 'name' , 'P_star' ;
  38 , 'name' , 'Pim_star' ;
  39 , 'name' , 'y_star' ;
  40 , 'name' , 'A' ;
  41 , 'name' , 'Z_C' ;
  42 , 'name' , 'Z_I' ;
  43 , 'name' , 'Measurement Eq: GDP Obs' ;
  44 , 'name' , 'Measurement Eq: Consumption Obs' ;
  45 , 'name' , 'Measurement Eq: Investment Obs' ;
};
M_.mapping.K.eqidx = [4 7 12 36 ];
M_.mapping.C.eqidx = [5 14 21 22 27 36 44 ];
M_.mapping.W.eqidx = [6 10 13 36 ];
M_.mapping.P_d.eqidx = [14 15 16 18 19 21 23 24 26 31 ];
M_.mapping.P_im.eqidx = [22 23 25 26 27 28 30 32 ];
M_.mapping.s.eqidx = [3 8 9 18 27 30 34 36 ];
M_.mapping.I.eqidx = [4 24 25 36 45 ];
M_.mapping.P_c.eqidx = [1 2 3 5 21 22 23 36 ];
M_.mapping.lambda.eqidx = [2 5 6 7 8 ];
M_.mapping.h.eqidx = [6 13 36 ];
M_.mapping.P_i.eqidx = [7 24 25 26 36 ];
M_.mapping.R_K.eqidx = [7 10 12 36 ];
M_.mapping.R_star.eqidx = [8 9 34 36 ];
M_.mapping.q_d.eqidx = [12 13 14 16 17 19 ];
M_.mapping.q_cd.eqidx = [17 21 ];
M_.mapping.q_cim.eqidx = [22 29 ];
M_.mapping.q_id.eqidx = [17 24 ];
M_.mapping.q_iim.eqidx = [25 29 ];
M_.mapping.q_ex.eqidx = [17 18 31 ];
M_.mapping.EX.eqidx = [31 33 35 ];
M_.mapping.IM.eqidx = [32 33 35 ];
M_.mapping.NX.eqidx = [33 34 ];
M_.mapping.B_star.eqidx = [9 34 36 ];
M_.mapping.GDP.eqidx = [1 19 20 35 43 ];
M_.mapping.GDP_ann.eqidx = [9 20 ];
M_.mapping.TO.eqidx = [35 ];
M_.mapping.q_im.eqidx = [27 29 30 32 ];
M_.mapping.Upsilon_d.eqidx = [15 16 17 ];
M_.mapping.Upsilon_im.eqidx = [28 29 30 ];
M_.mapping.Pi_d.eqidx = [16 36 ];
M_.mapping.Pi_im.eqidx = [30 34 36 ];
M_.mapping.mu.eqidx = [11 12 13 ];
M_.mapping.MC.eqidx = [10 11 14 16 ];
M_.mapping.rer.eqidx = [3 ];
M_.mapping.WL.eqidx = [36 ];
M_.mapping.P_star.eqidx = [8 9 18 34 36 37 ];
M_.mapping.A.eqidx = [10 40 ];
M_.mapping.Pim_star.eqidx = [3 27 38 ];
M_.mapping.Z_C.eqidx = [21 22 23 41 ];
M_.mapping.Z_I.eqidx = [24 25 26 42 ];
M_.mapping.y_star.eqidx = [18 39 ];
M_.mapping.i_nom.eqidx = [1 2 ];
M_.mapping.Y_obs.eqidx = [43 ];
M_.mapping.C_obs.eqidx = [44 ];
M_.mapping.I_obs.eqidx = [45 ];
M_.mapping.eps_A.eqidx = [40 ];
M_.mapping.eps_P_star.eqidx = [37 ];
M_.mapping.eps_Pim_star.eqidx = [38 ];
M_.mapping.eps_y_star.eqidx = [39 ];
M_.mapping.eps_C.eqidx = [41 ];
M_.mapping.eps_I.eqidx = [42 ];
M_.mapping.eps_inom.eqidx = [1 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 1;
M_.block_structure.block(1).endo_nbr = 6;
M_.block_structure.block(1).mfs = 6;
M_.block_structure.block(1).equation = [ 37 38 39 40 41 42];
M_.block_structure.block(1).variable = [ 36 38 41 37 39 40];
M_.block_structure.block(1).is_linear = true;
M_.block_structure.block(1).NNZDerivatives = 12;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [1 2 3 4 5 6 7 8 9 10 11 12 ];
M_.block_structure.block(2).Simulation_Type = 8;
M_.block_structure.block(2).endo_nbr = 32;
M_.block_structure.block(2).mfs = 21;
M_.block_structure.block(2).equation = [ 6 19 20 21 22 25 30 32 18 31 33 10 11 13 15 17 24 28 9 34 1 23 26 4 7 8 12 14 27 29 5 2];
M_.block_structure.block(2).variable = [ 10 24 25 15 16 18 31 21 19 20 22 3 33 32 28 17 7 29 13 23 42 4 5 1 11 6 12 14 2 27 8 9];
M_.block_structure.block(2).is_linear = false;
M_.block_structure.block(2).NNZDerivatives = 110;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [8 9 10 11 12 13 0 0 0 0 0 0 0 0 0 0 0 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 53 54 55 56 57 58 59 60 61 62 63 ];
M_.block_structure.block(3).Simulation_Type = 1;
M_.block_structure.block(3).endo_nbr = 7;
M_.block_structure.block(3).mfs = 7;
M_.block_structure.block(3).equation = [ 43 44 45 16 3 36 35];
M_.block_structure.block(3).variable = [ 43 44 45 30 34 35 26];
M_.block_structure.block(3).is_linear = true;
M_.block_structure.block(3).NNZDerivatives = 8;
M_.block_structure.block(3).bytecode_jacob_cols_to_sparse = [8 9 10 11 12 13 14 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([]);
M_.block_structure.block(1).g1_sparse_colval = int32([]);
M_.block_structure.block(1).g1_sparse_colptr = int32([]);
M_.block_structure.block(2).g1_sparse_rowval = int32([9 9 10 4 17 7 18 13 14 16 1 3 1 2 17 2 3 16 4 5 5 6 6 13 19 7 9 19 8 15 8 9 10 21 4 5 6 8 9 10 11 12 17 7 9 11 12 18 19 13 14 6 12 14 19 5 8 9 15 18 1 16 3 5 8 10 16 17 5 17 18 19 20 9 18 19 5 10 11 19 20 21 3 14 15 20 21 17 18 14 14 15 14 17 17 18 18 21 14 15 21 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([8 9 10 11 11 12 12 13 13 13 22 22 23 23 23 24 24 24 25 25 26 26 27 27 27 28 28 28 29 29 30 30 31 31 32 32 32 32 32 32 32 32 32 33 33 33 33 33 33 34 34 35 35 35 35 36 36 36 36 36 37 37 38 38 38 38 38 38 39 39 39 39 39 40 40 40 41 41 41 41 41 41 42 42 42 42 42 53 54 55 56 57 58 59 60 60 61 62 63 63 63 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 1 1 1 1 1 1 1 2 3 4 6 8 11 11 11 11 11 11 11 11 11 13 16 19 21 23 26 29 31 33 35 44 50 52 56 61 63 69 74 77 83 88 88 88 88 88 88 88 88 88 88 88 89 90 91 92 93 94 95 97 98 99 102 ]);
M_.block_structure.block(3).g1_sparse_rowval = int32([]);
M_.block_structure.block(3).g1_sparse_colval = int32([]);
M_.block_structure.block(3).g1_sparse_colptr = int32([]);
M_.block_structure.variable_reordered = [ 36 38 41 37 39 40 10 24 25 15 16 18 31 21 19 20 22 3 33 32 28 17 7 29 13 23 42 4 5 1 11 6 12 14 2 27 8 9 43 44 45 30 34 35 26];
M_.block_structure.equation_reordered = [ 37 38 39 40 41 42 6 19 20 21 22 25 30 32 18 31 33 10 11 13 15 17 24 28 9 34 1 23 26 4 7 8 12 14 27 29 5 2 43 44 45 16 3 36 35];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 1 42;
 4 1;
 7 1;
 12 1;
 14 4;
 15 4;
 27 5;
 28 5;
 34 13;
 34 23;
 36 13;
 36 23;
 37 36;
 38 38;
 39 41;
 40 37;
 41 39;
 42 40;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 8;
 1 24;
 1 42;
 2 8;
 2 9;
 2 42;
 3 6;
 3 8;
 3 34;
 3 38;
 4 1;
 4 7;
 5 2;
 5 8;
 5 9;
 6 3;
 6 9;
 6 10;
 7 1;
 7 9;
 7 11;
 8 6;
 8 9;
 8 13;
 8 36;
 9 6;
 9 13;
 9 23;
 9 25;
 9 36;
 10 3;
 10 12;
 10 33;
 10 37;
 11 32;
 11 33;
 12 12;
 12 14;
 12 32;
 13 3;
 13 10;
 13 14;
 13 32;
 14 2;
 14 4;
 14 14;
 14 33;
 15 4;
 15 28;
 16 4;
 16 14;
 16 28;
 16 30;
 16 33;
 17 14;
 17 15;
 17 17;
 17 19;
 17 28;
 18 4;
 18 6;
 18 19;
 18 36;
 18 41;
 19 4;
 19 14;
 19 24;
 20 24;
 20 25;
 21 2;
 21 4;
 21 8;
 21 15;
 21 39;
 22 2;
 22 5;
 22 8;
 22 16;
 22 39;
 23 4;
 23 5;
 23 8;
 23 39;
 24 4;
 24 7;
 24 11;
 24 17;
 24 40;
 25 5;
 25 7;
 25 11;
 25 18;
 25 40;
 26 4;
 26 5;
 26 11;
 26 40;
 27 2;
 27 5;
 27 6;
 27 27;
 27 38;
 28 5;
 28 29;
 29 16;
 29 18;
 29 27;
 29 29;
 30 5;
 30 6;
 30 27;
 30 29;
 30 31;
 31 4;
 31 19;
 31 20;
 32 5;
 32 21;
 32 27;
 33 20;
 33 21;
 33 22;
 34 6;
 34 22;
 34 23;
 34 31;
 34 36;
 35 20;
 35 21;
 35 24;
 35 26;
 36 1;
 36 2;
 36 3;
 36 6;
 36 7;
 36 8;
 36 10;
 36 11;
 36 12;
 36 23;
 36 30;
 36 31;
 36 35;
 36 36;
 37 36;
 38 38;
 39 41;
 40 37;
 41 39;
 42 40;
 43 24;
 43 43;
 44 2;
 44 44;
 45 7;
 45 45;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 2 8;
 2 9;
 7 1;
 7 9;
 7 11;
 7 12;
 8 6;
 8 9;
 8 36;
 14 2;
 14 4;
 14 14;
 27 2;
 27 5;
 27 27;
];
M_.block_structure.dyn_tmp_nbr = 27;
M_.state_var = [36 38 41 37 39 40 13 23 42 4 5 1 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(45, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(7, 1);
M_.params = NaN(37, 1);
M_.endo_trends = struct('deflator', cell(45, 1), 'log_deflator', cell(45, 1), 'growth_factor', cell(45, 1), 'log_growth_factor', cell(45, 1));
M_.NNZDerivatives = [197; 378; -1; ];
M_.dynamic_g1_sparse_rowval = int32([4 7 12 14 15 27 28 34 36 34 36 37 40 38 41 42 39 1 4 7 36 5 14 21 22 27 36 44 6 10 13 36 14 15 16 18 19 21 23 24 26 31 22 23 25 26 27 28 30 32 3 8 9 18 27 30 34 36 4 24 25 36 45 1 2 3 5 21 22 23 36 2 5 6 7 8 6 13 36 7 24 25 26 36 10 12 36 8 9 12 13 14 16 17 19 17 21 22 29 17 24 25 29 17 18 31 31 33 35 32 33 35 33 34 9 34 36 1 19 20 35 43 9 20 35 27 29 30 32 15 16 17 28 29 30 16 36 30 34 36 11 12 13 10 11 14 16 3 36 8 9 18 34 36 37 10 40 3 27 38 21 22 23 41 24 25 26 42 18 39 1 2 43 44 45 7 14 27 14 27 8 2 2 7 8 7 7 14 27 8 40 37 38 39 41 42 1 ]);
M_.dynamic_g1_sparse_colval = int32([1 1 1 4 4 5 5 13 13 23 23 36 37 38 39 40 41 42 46 46 46 47 47 47 47 47 47 47 48 48 48 48 49 49 49 49 49 49 49 49 49 49 50 50 50 50 50 50 50 50 51 51 51 51 51 51 51 51 52 52 52 52 52 53 53 53 53 53 53 53 53 54 54 54 54 54 55 55 55 56 56 56 56 56 57 57 57 58 58 59 59 59 59 59 59 60 60 61 61 62 62 63 63 64 64 64 65 65 65 66 66 66 67 67 68 68 68 69 69 69 69 69 70 70 71 72 72 72 72 73 73 73 74 74 74 75 75 76 76 76 77 77 77 78 78 78 78 79 80 81 81 81 81 81 81 82 82 83 83 83 84 84 84 84 85 85 85 85 86 86 87 87 88 89 90 91 92 92 94 95 96 98 99 99 99 101 102 104 117 126 136 137 138 139 140 141 142 ]);
M_.dynamic_g1_sparse_colptr = int32([1 4 4 4 6 8 8 8 8 8 8 8 8 10 10 10 10 10 10 10 10 10 10 12 12 12 12 12 12 12 12 12 12 12 12 12 13 14 15 16 17 18 19 19 19 19 22 29 33 43 51 59 64 72 77 80 85 88 90 96 98 100 102 104 107 110 113 115 118 123 125 126 130 133 136 138 141 144 148 149 150 156 158 161 165 169 171 173 174 175 176 177 179 179 180 181 182 182 183 186 186 187 188 188 189 189 189 189 189 189 189 189 189 189 189 189 189 190 190 190 190 190 190 190 190 190 191 191 191 191 191 191 191 191 191 191 192 193 194 195 196 197 198 ]);
M_.dynamic_g2_sparse_indices = int32([2 53 54 ;
2 98 99 ;
2 98 87 ;
2 99 87 ;
3 51 53 ;
3 51 83 ;
3 53 53 ;
3 53 83 ;
4 1 1 ;
4 1 46 ;
4 46 46 ;
5 47 47 ;
5 47 53 ;
5 53 53 ;
6 48 48 ;
6 48 54 ;
6 54 54 ;
7 1 54 ;
7 1 56 ;
7 46 54 ;
7 46 99 ;
7 46 56 ;
7 46 101 ;
7 91 99 ;
7 91 101 ;
7 54 56 ;
7 99 101 ;
7 99 102 ;
7 101 101 ;
7 101 102 ;
8 51 54 ;
8 51 81 ;
8 96 99 ;
8 96 58 ;
8 96 126 ;
8 54 81 ;
8 99 58 ;
8 99 126 ;
8 58 126 ;
9 51 51 ;
9 51 68 ;
9 51 70 ;
9 51 81 ;
9 68 68 ;
9 68 70 ;
9 68 81 ;
9 70 70 ;
9 70 81 ;
9 81 81 ;
10 48 48 ;
10 48 57 ;
10 48 82 ;
10 57 57 ;
10 57 82 ;
10 82 82 ;
12 1 1 ;
12 1 59 ;
12 1 77 ;
12 59 77 ;
13 55 55 ;
13 55 59 ;
13 55 77 ;
13 59 77 ;
14 47 47 ;
14 47 92 ;
14 47 49 ;
14 47 94 ;
14 47 59 ;
14 47 104 ;
14 92 92 ;
14 92 49 ;
14 92 94 ;
14 92 59 ;
14 92 104 ;
14 4 4 ;
14 4 49 ;
14 49 49 ;
14 49 94 ;
14 49 59 ;
14 49 104 ;
14 49 78 ;
14 94 94 ;
14 94 59 ;
14 94 104 ;
14 59 59 ;
14 59 104 ;
15 4 4 ;
15 4 49 ;
15 49 49 ;
16 49 59 ;
16 49 73 ;
16 59 73 ;
16 59 78 ;
18 49 49 ;
18 49 51 ;
18 49 81 ;
18 49 86 ;
18 51 51 ;
18 51 81 ;
18 51 86 ;
18 81 81 ;
18 81 86 ;
19 49 59 ;
21 47 49 ;
21 47 53 ;
21 47 84 ;
21 49 49 ;
21 49 53 ;
21 49 84 ;
21 53 53 ;
21 53 84 ;
21 84 84 ;
22 47 50 ;
22 47 53 ;
22 47 84 ;
22 50 50 ;
22 50 53 ;
22 50 84 ;
22 53 53 ;
22 53 84 ;
22 84 84 ;
23 49 49 ;
23 49 84 ;
23 50 50 ;
23 50 84 ;
23 53 53 ;
23 84 84 ;
24 49 49 ;
24 49 52 ;
24 49 56 ;
24 49 85 ;
24 52 56 ;
24 52 85 ;
24 56 56 ;
24 56 85 ;
24 85 85 ;
25 50 50 ;
25 50 52 ;
25 50 56 ;
25 50 85 ;
25 52 56 ;
25 52 85 ;
25 56 56 ;
25 56 85 ;
25 85 85 ;
26 49 49 ;
26 49 50 ;
26 49 85 ;
26 50 50 ;
26 50 85 ;
26 85 85 ;
27 47 47 ;
27 47 92 ;
27 47 50 ;
27 47 95 ;
27 47 72 ;
27 47 117 ;
27 92 92 ;
27 92 50 ;
27 92 95 ;
27 92 72 ;
27 92 117 ;
27 5 5 ;
27 5 50 ;
27 50 50 ;
27 50 95 ;
27 50 51 ;
27 50 72 ;
27 50 117 ;
27 50 83 ;
27 95 95 ;
27 95 72 ;
27 95 117 ;
27 51 83 ;
27 72 72 ;
27 72 117 ;
28 5 5 ;
28 5 50 ;
28 50 50 ;
30 50 72 ;
30 50 74 ;
30 51 72 ;
30 72 74 ;
31 49 64 ;
32 50 72 ;
34 51 13 ;
34 51 23 ;
34 51 68 ;
34 51 81 ;
34 13 23 ;
34 13 81 ;
34 23 81 ;
34 68 81 ;
35 65 69 ;
35 66 69 ;
35 69 69 ;
36 46 57 ;
36 47 53 ;
36 48 55 ;
36 51 13 ;
36 51 23 ;
36 51 68 ;
36 51 81 ;
36 52 56 ;
36 13 23 ;
36 13 81 ;
36 23 81 ;
36 68 81 ;
37 36 36 ;
37 36 137 ;
38 38 38 ;
38 38 138 ;
39 41 41 ;
39 41 139 ;
40 37 37 ;
40 37 136 ;
41 39 39 ;
41 39 140 ;
42 40 40 ;
42 40 141 ;
]);
M_.lhs = {
'i_nom'; 
'P_c*lambda'; 
'rer'; 
'I'; 
'lambda'; 
'h'; 
'lambda*P_i*(1+phi_K*(K-K(-1)))'; 
'lambda*s*P_star'; 
'R_star'; 
'MC'; 
'mu'; 
'R_K'; 
'W'; 
'MC*theta_d/P_d'; 
'Upsilon_d'; 
'Pi_d'; 
'q_d'; 
'q_ex'; 
'GDP'; 
'GDP_ann'; 
'q_cd'; 
'q_cim'; 
'P_c^(1-theta_c)'; 
'q_id'; 
'q_iim'; 
'P_i'; 
's*Pim_star*theta_im/P_im'; 
'Upsilon_im'; 
'q_im'; 
'Pi_im'; 
'EX'; 
'IM'; 
'NX'; 
'Pi_im+NX'; 
'TO'; 
'WL'; 
'P_star'; 
'Pim_star'; 
'y_star'; 
'A'; 
'Z_C'; 
'Z_I'; 
'Y_obs'; 
'C_obs'; 
'I_obs'; 
};
M_.static_tmp_nbr = [20; 9; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 1;
M_.block_structure_stat.block(1).endo_nbr = 2;
M_.block_structure_stat.block(1).mfs = 2;
M_.block_structure_stat.block(1).equation = [ 15 28];
M_.block_structure_stat.block(1).variable = [ 28 29];
M_.block_structure_stat.block(2).Simulation_Type = 3;
M_.block_structure_stat.block(2).endo_nbr = 1;
M_.block_structure_stat.block(2).mfs = 1;
M_.block_structure_stat.block(2).equation = [ 37];
M_.block_structure_stat.block(2).variable = [ 36];
M_.block_structure_stat.block(3).Simulation_Type = 3;
M_.block_structure_stat.block(3).endo_nbr = 1;
M_.block_structure_stat.block(3).mfs = 1;
M_.block_structure_stat.block(3).equation = [ 38];
M_.block_structure_stat.block(3).variable = [ 38];
M_.block_structure_stat.block(4).Simulation_Type = 3;
M_.block_structure_stat.block(4).endo_nbr = 1;
M_.block_structure_stat.block(4).mfs = 1;
M_.block_structure_stat.block(4).equation = [ 39];
M_.block_structure_stat.block(4).variable = [ 41];
M_.block_structure_stat.block(5).Simulation_Type = 3;
M_.block_structure_stat.block(5).endo_nbr = 1;
M_.block_structure_stat.block(5).mfs = 1;
M_.block_structure_stat.block(5).equation = [ 40];
M_.block_structure_stat.block(5).variable = [ 37];
M_.block_structure_stat.block(6).Simulation_Type = 3;
M_.block_structure_stat.block(6).endo_nbr = 1;
M_.block_structure_stat.block(6).mfs = 1;
M_.block_structure_stat.block(6).equation = [ 41];
M_.block_structure_stat.block(6).variable = [ 39];
M_.block_structure_stat.block(7).Simulation_Type = 3;
M_.block_structure_stat.block(7).endo_nbr = 1;
M_.block_structure_stat.block(7).mfs = 1;
M_.block_structure_stat.block(7).equation = [ 42];
M_.block_structure_stat.block(7).variable = [ 40];
M_.block_structure_stat.block(8).Simulation_Type = 6;
M_.block_structure_stat.block(8).endo_nbr = 30;
M_.block_structure_stat.block(8).mfs = 30;
M_.block_structure_stat.block(8).equation = [ 9 10 11 12 13 14 1 8 17 18 19 20 21 22 23 24 25 26 27 2 29 30 31 32 33 34 7 6 5 4];
M_.block_structure_stat.block(8).variable = [ 23 3 33 32 14 4 42 13 17 19 24 25 15 16 8 7 11 5 6 9 18 27 20 21 22 31 12 10 2 1];
M_.block_structure_stat.block(9).Simulation_Type = 1;
M_.block_structure_stat.block(9).endo_nbr = 7;
M_.block_structure_stat.block(9).mfs = 7;
M_.block_structure_stat.block(9).equation = [ 43 44 45 16 3 36 35];
M_.block_structure_stat.block(9).variable = [ 43 44 45 30 34 35 26];
M_.block_structure_stat.variable_reordered = [ 28 29 36 38 41 37 39 40 23 3 33 32 14 4 42 13 17 19 24 25 15 16 8 7 11 5 6 9 18 27 20 21 22 31 12 10 2 1 43 44 45 30 34 35 26];
M_.block_structure_stat.equation_reordered = [ 15 28 37 38 39 40 41 42 9 10 11 12 13 14 1 8 17 18 19 20 21 22 23 24 25 26 27 2 29 30 31 32 33 34 7 6 5 4 43 44 45 16 3 36 35];
M_.block_structure_stat.incidence.sparse_IM = [
 1 8;
 1 24;
 1 42;
 2 8;
 2 9;
 2 42;
 3 6;
 3 8;
 3 34;
 3 38;
 4 1;
 4 7;
 5 2;
 5 8;
 5 9;
 6 3;
 6 9;
 6 10;
 7 9;
 7 11;
 7 12;
 8 6;
 8 9;
 8 13;
 8 36;
 9 6;
 9 13;
 9 23;
 9 25;
 9 36;
 10 3;
 10 12;
 10 33;
 10 37;
 11 32;
 11 33;
 12 1;
 12 12;
 12 14;
 12 32;
 13 3;
 13 10;
 13 14;
 13 32;
 14 4;
 14 33;
 15 28;
 16 4;
 16 14;
 16 28;
 16 30;
 16 33;
 17 14;
 17 15;
 17 17;
 17 19;
 17 28;
 18 4;
 18 6;
 18 19;
 18 36;
 18 41;
 19 4;
 19 14;
 19 24;
 20 24;
 20 25;
 21 2;
 21 4;
 21 8;
 21 15;
 21 39;
 22 2;
 22 5;
 22 8;
 22 16;
 22 39;
 23 4;
 23 5;
 23 8;
 23 39;
 24 4;
 24 7;
 24 11;
 24 17;
 24 40;
 25 5;
 25 7;
 25 11;
 25 18;
 25 40;
 26 4;
 26 5;
 26 11;
 26 40;
 27 5;
 27 6;
 27 38;
 28 29;
 29 16;
 29 18;
 29 27;
 29 29;
 30 5;
 30 6;
 30 27;
 30 29;
 30 31;
 31 4;
 31 19;
 31 20;
 32 5;
 32 21;
 32 27;
 33 20;
 33 21;
 33 22;
 34 6;
 34 13;
 34 22;
 34 23;
 34 31;
 34 36;
 35 20;
 35 21;
 35 24;
 35 26;
 36 1;
 36 2;
 36 3;
 36 6;
 36 7;
 36 8;
 36 10;
 36 11;
 36 12;
 36 13;
 36 23;
 36 30;
 36 31;
 36 35;
 36 36;
 37 36;
 38 38;
 39 41;
 40 37;
 41 39;
 42 40;
 43 24;
 43 43;
 44 2;
 44 44;
 45 7;
 45 45;
];
M_.block_structure_stat.tmp_nbr = 23;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(6).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(6).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(7).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(7).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(7).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(8).g1_sparse_rowval = int32([1 26 2 5 28 2 3 6 3 4 5 4 5 9 11 6 10 11 13 15 16 18 23 7 20 1 8 26 9 16 9 10 23 7 11 12 1 12 9 13 14 21 7 13 14 15 20 29 16 17 30 16 17 18 27 14 15 17 18 19 22 24 1 8 10 19 22 26 8 20 27 28 29 17 21 21 22 24 23 25 24 25 25 26 22 26 2 4 27 5 28 13 14 29 4 30 ]);
M_.block_structure_stat.block(8).g1_sparse_colval = int32([1 1 2 2 2 3 3 3 4 4 4 5 5 5 5 6 6 6 6 6 6 6 6 7 7 8 8 8 9 9 10 10 10 11 11 11 12 12 13 13 14 14 15 15 15 15 15 15 16 16 16 17 17 17 17 18 18 18 18 18 18 18 19 19 19 19 19 19 20 20 20 20 20 21 21 22 22 22 23 23 24 24 25 25 26 26 27 27 27 28 28 29 29 29 30 30 ]);
M_.block_structure_stat.block(8).g1_sparse_colptr = int32([1 3 6 9 12 16 24 26 29 31 34 37 39 41 43 49 52 56 63 69 74 76 79 81 83 85 87 90 92 95 97 ]);
M_.block_structure_stat.block(9).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(9).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(9).g1_sparse_colptr = int32([]);
M_.static_g1_sparse_rowval = int32([4 12 36 5 21 22 36 44 6 10 13 36 14 16 18 19 21 23 24 26 31 22 23 25 26 27 30 32 3 8 9 18 27 30 34 36 4 24 25 36 45 1 2 3 5 21 22 23 36 2 5 6 7 8 6 13 36 7 24 25 26 36 7 10 12 36 8 9 34 36 12 13 16 17 19 17 21 22 29 17 24 25 29 17 18 31 31 33 35 32 33 35 33 34 9 34 36 1 19 20 35 43 9 20 35 29 30 32 15 16 17 28 29 30 16 36 30 34 36 11 12 13 10 11 14 16 3 36 8 9 18 34 36 37 10 40 3 27 38 21 22 23 41 24 25 26 42 18 39 1 2 43 44 45 ]);
M_.static_g1_sparse_colval = int32([1 1 1 2 2 2 2 2 3 3 3 3 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 7 7 7 7 7 8 8 8 8 8 8 8 8 9 9 9 9 9 10 10 10 11 11 11 11 11 12 12 12 12 13 13 13 13 14 14 14 14 14 15 15 16 16 17 17 18 18 19 19 19 20 20 20 21 21 21 22 22 23 23 23 24 24 24 24 24 25 25 26 27 27 27 28 28 28 29 29 29 30 30 31 31 31 32 32 32 33 33 33 33 34 35 36 36 36 36 36 36 37 37 38 38 38 39 39 39 39 40 40 40 40 41 41 42 42 43 44 45 ]);
M_.static_g1_sparse_colptr = int32([1 4 9 13 22 29 37 42 50 55 58 63 67 71 76 78 80 82 84 87 90 93 95 98 103 105 106 109 112 115 117 120 123 127 128 129 135 137 140 144 148 150 152 153 154 155 ]);
close all;
load params.mat;
load SSvar.mat;
M_.params(1) = params(1);
sigma = M_.params(1);
M_.params(2) = params(2);
delta = M_.params(2);
M_.params(3) = params(3);
beta = M_.params(3);
M_.params(4) = params(4);
psi_h = M_.params(4);
M_.params(5) = params(5);
eta = M_.params(5);
M_.params(6) = params(6);
phi_K = M_.params(6);
M_.params(7) = params(7);
alpha = M_.params(7);
M_.params(8) = params(8);
theta_c = M_.params(8);
M_.params(9) = params(9);
theta_i = M_.params(9);
M_.params(10) = params(10);
omega_c = M_.params(10);
M_.params(11) = params(11);
omega_i = M_.params(11);
M_.params(12) = params(12);
theta_ex = M_.params(12);
M_.params(13) = params(13);
B_star_ss = M_.params(13);
M_.params(14) = params(14);
y_star_ss = M_.params(14);
M_.params(15) = params(15);
A_ss = M_.params(15);
M_.params(16) = params(16);
P_star_ss = M_.params(16);
M_.params(17) = params(17);
rho_C = M_.params(17);
M_.params(18) = params(18);
rho_I = M_.params(18);
M_.params(19) = params(19);
phi_q = M_.params(19);
M_.params(20) = params(20);
phi_im = M_.params(20);
M_.params(21) = params(21);
theta_im = M_.params(21);
M_.params(22) = params(22);
Pim_star_ss = M_.params(22);
M_.params(23) = params(23);
theta_d = M_.params(23);
M_.params(24) = params(24);
Z_C_ss = M_.params(24);
M_.params(25) = params(25);
Z_I_ss = M_.params(25);
M_.params(26) = params(26);
rho_A = M_.params(26);
M_.params(27) = params(27);
rho_Pim_star = M_.params(27);
M_.params(28) = params(28);
rho_y_star = M_.params(28);
M_.params(29) = params(29);
phi_b = M_.params(29);
M_.params(30) = params(30);
rho_P_star = M_.params(30);
M_.params(31) = params(31);
R_star_ss = M_.params(31);
M_.params(32) = params(32);
i_nom_ss = M_.params(32);
M_.params(33) = params(33);
GDP_ss = M_.params(33);
M_.params(34) = params(34);
P_c_ss = M_.params(34);
M_.params(35) = params(35);
rho_inom = M_.params(35);
M_.params(36) = params(36);
phi_y = M_.params(36);
M_.params(37) = params(37);
phi_P = M_.params(37);
%
% INITVAL instructions
%
options_.initval_file = false;
oo_.steady_state(1) = SSvar(1);
oo_.steady_state(2) = SSvar(2);
oo_.steady_state(3) = SSvar(3);
oo_.steady_state(4) = SSvar(4);
oo_.steady_state(5) = SSvar(5);
oo_.steady_state(6) = SSvar(6);
oo_.steady_state(7) = SSvar(7);
oo_.steady_state(8) = SSvar(8);
oo_.steady_state(9) = SSvar(9);
oo_.steady_state(10) = SSvar(10);
oo_.steady_state(11) = SSvar(11);
oo_.steady_state(12) = SSvar(12);
oo_.steady_state(13) = SSvar(13);
oo_.steady_state(14) = SSvar(14);
oo_.steady_state(15) = SSvar(15);
oo_.steady_state(16) = SSvar(16);
oo_.steady_state(17) = SSvar(17);
oo_.steady_state(18) = SSvar(18);
oo_.steady_state(19) = SSvar(19);
oo_.steady_state(20) = SSvar(20);
oo_.steady_state(21) = SSvar(21);
oo_.steady_state(22) = SSvar(22);
oo_.steady_state(23) = SSvar(23);
oo_.steady_state(24) = SSvar(24);
oo_.steady_state(25) = SSvar(25);
oo_.steady_state(26) = SSvar(26);
oo_.steady_state(27) = SSvar(27);
oo_.steady_state(28) = SSvar(28);
oo_.steady_state(29) = SSvar(29);
oo_.steady_state(30) = SSvar(30);
oo_.steady_state(31) = SSvar(31);
oo_.steady_state(32) = SSvar(32);
oo_.steady_state(33) = SSvar(33);
oo_.steady_state(34) = SSvar(34);
oo_.steady_state(35) = SSvar(35);
oo_.steady_state(36) = SSvar(36);
oo_.steady_state(37) = SSvar(37);
oo_.steady_state(38) = SSvar(38);
oo_.steady_state(39) = SSvar(39);
oo_.steady_state(40) = SSvar(40);
oo_.steady_state(41) = SSvar(41);
oo_.steady_state(42) = SSvar(42);
if M_.exo_nbr > 0
	oo_.exo_simul = ones(M_.maximum_lag,1)*oo_.exo_steady_state';
end
if M_.exo_det_nbr > 0
	oo_.exo_det_simul = ones(M_.maximum_lag,1)*oo_.exo_det_steady_state';
end
model_diagnostics(M_,options_,oo_);
options_resid_ = struct();
options_resid_.non_zero = true;
display_static_residuals(M_, options_, oo_, options_resid_);
oo_.dr.eigval = check(M_,options_,oo_);
steady;
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(5, 5) = 0.0001;
M_.Sigma_e(6, 6) = 0.0001;
M_.Sigma_e(1, 1) = (0.01)^2;
if isempty(estim_params_)
    estim_params_.var_exo = zeros(0, 10);
    estim_params_.var_endo = zeros(0, 10);
    estim_params_.corrx = zeros(0, 11);
    estim_params_.corrn = zeros(0, 11);
    estim_params_.param_vals = zeros(0, 10);
end
if ~isempty(find(estim_params_.param_vals(:,1)==17))
    error('Parameter rho_C has been specified twice in two concatenated ''estimated_params'' blocks. Depending on your intention, you may want to use the ''overwrite'' option or an ''estimated_params_remove'' block.')
end
estim_params_.param_vals = [estim_params_.param_vals; 17, 0.8, 0, 1, 0, NaN, NaN, NaN, NaN, NaN ];
if ~isempty(find(estim_params_.param_vals(:,1)==18))
    error('Parameter rho_I has been specified twice in two concatenated ''estimated_params'' blocks. Depending on your intention, you may want to use the ''overwrite'' option or an ''estimated_params_remove'' block.')
end
estim_params_.param_vals = [estim_params_.param_vals; 18, 0.8, 0, 1, 0, NaN, NaN, NaN, NaN, NaN ];
if ~isempty(find(estim_params_.var_exo(:,1)==1))
    error('The standard deviation for eps_A has been specified twice in two concatenated ''estimated_params'' blocks. Depending on your intention, you may want to use the ''overwrite'' option or an ''estimated_params_remove'' block.')
end
estim_params_.var_exo = [estim_params_.var_exo; 1, 0.01, 0.00001, 10, 0, NaN, NaN, NaN, NaN, NaN ];
if ~isempty(find(estim_params_.var_exo(:,1)==5))
    error('The standard deviation for eps_C has been specified twice in two concatenated ''estimated_params'' blocks. Depending on your intention, you may want to use the ''overwrite'' option or an ''estimated_params_remove'' block.')
end
estim_params_.var_exo = [estim_params_.var_exo; 5, 0.01, 0.00001, 10, 0, NaN, NaN, NaN, NaN, NaN ];
if ~isempty(find(estim_params_.var_exo(:,1)==6))
    error('The standard deviation for eps_I has been specified twice in two concatenated ''estimated_params'' blocks. Depending on your intention, you may want to use the ''overwrite'' option or an ''estimated_params_remove'' block.')
end
estim_params_.var_exo = [estim_params_.var_exo; 6, 0.01, 0.00001, 10, 0, NaN, NaN, NaN, NaN, NaN ];
if ~isempty(find(estim_params_.param_vals(:,1)==6))
    error('Parameter phi_K has been specified twice in two concatenated ''estimated_params'' blocks. Depending on your intention, you may want to use the ''overwrite'' option or an ''estimated_params_remove'' block.')
end
estim_params_.param_vals = [estim_params_.param_vals; 6, 0.01, 0, 20, 0, NaN, NaN, NaN, NaN, NaN ];
options_.datafile = 'Datos/DataCOL.xlsx';
options_.mode_check.status = true;
options_.mode_compute = 5;
options_.nobs = 170;
options_.smoother = true;
options_.order = 1;
var_list_ = {};
oo_recursive_=dynare_estimation(var_list_);
options_.no_graph.shock_decomposition = true;
options_.nobs = 171;
options_.parameter_set = 'mle_mode';
var_list_ = {};
oo_ = shock_decomposition(M_,oo_,options_,var_list_,bayestopt_,estim_params_);
options_ = set_default_plot_shock_decomposition_options(options_);
var_list_ = {'Y_obs';'C_obs';'I_obs'};
oo_ = plot_shock_decomposition(M_, oo_, options_, var_list_);
options_.irf = 40;
options_.nograph = true;
options_.order = 2;
options_.periods = 100000;
var_list_ = {'GDP';'C';'I';'EX';'IM';'NX';'s';'P_c';'i_nom'};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'Model_SOECESPricesMP_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
