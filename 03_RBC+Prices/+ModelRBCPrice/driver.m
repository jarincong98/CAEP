%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

clearvars -global
clear_persistent_variables(fileparts(which('dynare')), false)
tic0 = tic;
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info
options_ = [];
M_.fname = 'ModelRBCPrice';
M_.dynare_version = '6.3';
oo_.dynare_version = '6.3';
options_.dynare_version = '6.3';
%
% Some global variables initialization
%
global_initialization;
M_.exo_names = cell(2,1);
M_.exo_names_tex = cell(2,1);
M_.exo_names_long = cell(2,1);
M_.exo_names(1) = {'eps_A'};
M_.exo_names_tex(1) = {'eps\_A'};
M_.exo_names_long(1) = {'eps_A'};
M_.exo_names(2) = {'eps_D'};
M_.exo_names_tex(2) = {'eps\_D'};
M_.exo_names_long(2) = {'eps_D'};
M_.endo_names = cell(16,1);
M_.endo_names_tex = cell(16,1);
M_.endo_names_long = cell(16,1);
M_.endo_names(1) = {'K'};
M_.endo_names_tex(1) = {'K'};
M_.endo_names_long(1) = {'K'};
M_.endo_names(2) = {'C'};
M_.endo_names_tex(2) = {'C'};
M_.endo_names_long(2) = {'C'};
M_.endo_names(3) = {'L'};
M_.endo_names_tex(3) = {'L'};
M_.endo_names_long(3) = {'L'};
M_.endo_names(4) = {'P'};
M_.endo_names_tex(4) = {'P'};
M_.endo_names_long(4) = {'P'};
M_.endo_names(5) = {'I'};
M_.endo_names_tex(5) = {'I'};
M_.endo_names_long(5) = {'I'};
M_.endo_names(6) = {'lambda'};
M_.endo_names_tex(6) = {'lambda'};
M_.endo_names_long(6) = {'lambda'};
M_.endo_names(7) = {'W'};
M_.endo_names_tex(7) = {'W'};
M_.endo_names_long(7) = {'W'};
M_.endo_names(8) = {'R_K'};
M_.endo_names_tex(8) = {'R\_K'};
M_.endo_names_long(8) = {'R_K'};
M_.endo_names(9) = {'MC'};
M_.endo_names_tex(9) = {'MC'};
M_.endo_names_long(9) = {'MC'};
M_.endo_names(10) = {'Upsilon'};
M_.endo_names_tex(10) = {'Upsilon'};
M_.endo_names_long(10) = {'Upsilon'};
M_.endo_names(11) = {'q'};
M_.endo_names_tex(11) = {'q'};
M_.endo_names_long(11) = {'q'};
M_.endo_names(12) = {'mu'};
M_.endo_names_tex(12) = {'mu'};
M_.endo_names_long(12) = {'mu'};
M_.endo_names(13) = {'Pi_q'};
M_.endo_names_tex(13) = {'Pi\_q'};
M_.endo_names_long(13) = {'Pi_q'};
M_.endo_names(14) = {'A'};
M_.endo_names_tex(14) = {'A'};
M_.endo_names_long(14) = {'A'};
M_.endo_names(15) = {'pi'};
M_.endo_names_tex(15) = {'pi'};
M_.endo_names_long(15) = {'pi'};
M_.endo_names(16) = {'Z_D'};
M_.endo_names_tex(16) = {'Z\_D'};
M_.endo_names_long(16) = {'Z_D'};
M_.endo_partitions = struct();
M_.param_names = cell(12,1);
M_.param_names_tex = cell(12,1);
M_.param_names_long = cell(12,1);
M_.param_names(1) = {'sigma'};
M_.param_names_tex(1) = {'sigma'};
M_.param_names_long(1) = {'sigma'};
M_.param_names(2) = {'beta'};
M_.param_names_tex(2) = {'beta'};
M_.param_names_long(2) = {'beta'};
M_.param_names(3) = {'delta'};
M_.param_names_tex(3) = {'delta'};
M_.param_names_long(3) = {'delta'};
M_.param_names(4) = {'alpha'};
M_.param_names_tex(4) = {'alpha'};
M_.param_names_long(4) = {'alpha'};
M_.param_names(5) = {'psi_l'};
M_.param_names_tex(5) = {'psi\_l'};
M_.param_names_long(5) = {'psi_l'};
M_.param_names(6) = {'eta'};
M_.param_names_tex(6) = {'eta'};
M_.param_names_long(6) = {'eta'};
M_.param_names(7) = {'rho'};
M_.param_names_tex(7) = {'rho'};
M_.param_names_long(7) = {'rho'};
M_.param_names(8) = {'Ass'};
M_.param_names_tex(8) = {'Ass'};
M_.param_names_long(8) = {'Ass'};
M_.param_names(9) = {'phi_q'};
M_.param_names_tex(9) = {'phi\_q'};
M_.param_names_long(9) = {'phi_q'};
M_.param_names(10) = {'theta'};
M_.param_names_tex(10) = {'theta'};
M_.param_names_long(10) = {'theta'};
M_.param_names(11) = {'phi_k'};
M_.param_names_tex(11) = {'phi\_k'};
M_.param_names_long(11) = {'phi_k'};
M_.param_names(12) = {'rho_D'};
M_.param_names_tex(12) = {'rho\_D'};
M_.param_names_long(12) = {'rho_D'};
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 2;
M_.endo_nbr = 16;
M_.param_nbr = 12;
M_.orig_endo_nbr = 16;
M_.aux_vars = [];
M_.Sigma_e = zeros(2, 2);
M_.Correlation_matrix = eye(2, 2);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = true;
M_.det_shocks = [];
M_.surprise_shocks = [];
M_.learnt_shocks = [];
M_.learnt_endval = [];
M_.heteroskedastic_shocks.Qvalue_orig = [];
M_.heteroskedastic_shocks.Qscale_orig = [];
M_.matched_irfs = {};
M_.matched_irfs_weights = {};
options_.linear = false;
options_.block = false;
options_.bytecode = false;
options_.use_dll = false;
options_.ramsey_policy = false;
options_.discretionary_policy = false;
M_.nonzero_hessian_eqs = [2 3 4 5 6 7 10 11 12 13 14 15 16];
M_.hessian_eq_zero = isempty(M_.nonzero_hessian_eqs);
M_.eq_nbr = 16;
M_.ramsey_orig_eq_nbr = 0;
M_.ramsey_orig_endo_nbr = 0;
M_.set_auxiliary_variables = exist(['./+' M_.fname '/set_auxiliary_variables.m'], 'file') == 2;
M_.epilogue_names = {};
M_.epilogue_var_list_ = {};
M_.orig_maximum_endo_lag = 1;
M_.orig_maximum_endo_lead = 1;
M_.orig_maximum_exo_lag = 0;
M_.orig_maximum_exo_lead = 0;
M_.orig_maximum_exo_det_lag = 0;
M_.orig_maximum_exo_det_lead = 0;
M_.orig_maximum_lag = 1;
M_.orig_maximum_lead = 1;
M_.orig_maximum_lag_with_diffs_expanded = 1;
M_.lead_lag_incidence = [
 1 5 21;
 0 6 22;
 0 7 0;
 2 8 23;
 0 9 0;
 0 10 24;
 0 11 0;
 0 12 25;
 0 13 0;
 0 14 0;
 0 15 26;
 0 16 0;
 0 17 0;
 3 18 0;
 0 19 0;
 4 20 27;]';
M_.nstatic = 8;
M_.nfwrd   = 4;
M_.npred   = 1;
M_.nboth   = 3;
M_.nsfwrd   = 7;
M_.nspred   = 4;
M_.ndynamic   = 8;
M_.dynamic_tmp_nbr = [14; 21; 2; 0; ];
M_.equations_tags = {
  1 , 'name' , 'BC' ;
  2 , 'name' , 'Investment' ;
  3 , 'name' , 'Lambda' ;
  4 , 'name' , 'Labor Supply' ;
  5 , 'name' , 'Euler Equation K' ;
  6 , 'name' , 'MC' ;
  7 , 'name' , 'Price adjustment cost' ;
  8 , 'name' , 'Market clearing for final goods' ;
  9 , 'name' , 'mu' ;
  10 , 'name' , 'Profits' ;
  11 , 'name' , 'Optimal prices: Phillips Curve' ;
  12 , 'name' , 'Capital Demand' ;
  13 , 'name' , 'Labor Demand' ;
  14 , 'name' , 'TFP shock' ;
  15 , 'name' , 'inflation' ;
  16 , 'name' , 'Demand shock' ;
};
M_.mapping.K.eqidx = [2 5 10 12 ];
M_.mapping.C.eqidx = [3 8 11 ];
M_.mapping.L.eqidx = [4 10 13 ];
M_.mapping.P.eqidx = [3 5 7 10 11 15 ];
M_.mapping.I.eqidx = [2 8 ];
M_.mapping.lambda.eqidx = [3 4 5 ];
M_.mapping.W.eqidx = [1 ];
M_.mapping.R_K.eqidx = [5 6 10 12 ];
M_.mapping.MC.eqidx = [6 9 11 ];
M_.mapping.Upsilon.eqidx = [7 8 10 ];
M_.mapping.q.eqidx = [8 10 11 12 13 ];
M_.mapping.mu.eqidx = [9 12 13 ];
M_.mapping.Pi_q.eqidx = [10 ];
M_.mapping.A.eqidx = [6 14 ];
M_.mapping.pi.eqidx = [15 ];
M_.mapping.Z_D.eqidx = [3 5 16 ];
M_.mapping.eps_A.eqidx = [14 ];
M_.mapping.eps_D.eqidx = [16 ];
M_.static_and_dynamic_models_differ = false;
M_.has_external_function = false;
M_.block_structure.time_recursive = false;
M_.block_structure.block(1).Simulation_Type = 1;
M_.block_structure.block(1).endo_nbr = 3;
M_.block_structure.block(1).mfs = 3;
M_.block_structure.block(1).equation = [ 1 14 16];
M_.block_structure.block(1).variable = [ 7 14 16];
M_.block_structure.block(1).is_linear = true;
M_.block_structure.block(1).NNZDerivatives = 5;
M_.block_structure.block(1).bytecode_jacob_cols_to_sparse = [2 3 4 5 6 ];
M_.block_structure.block(2).Simulation_Type = 8;
M_.block_structure.block(2).endo_nbr = 11;
M_.block_structure.block(2).mfs = 9;
M_.block_structure.block(2).equation = [ 6 9 8 13 2 5 7 4 3 11 12];
M_.block_structure.block(2).variable = [ 9 12 10 3 5 1 4 6 2 11 8];
M_.block_structure.block(2).is_linear = false;
M_.block_structure.block(2).NNZDerivatives = 40;
M_.block_structure.block(2).bytecode_jacob_cols_to_sparse = [4 5 0 0 10 11 12 13 14 15 16 17 18 22 23 24 25 26 27 ];
M_.block_structure.block(3).Simulation_Type = 1;
M_.block_structure.block(3).endo_nbr = 2;
M_.block_structure.block(3).mfs = 2;
M_.block_structure.block(3).equation = [ 15 10];
M_.block_structure.block(3).variable = [ 15 13];
M_.block_structure.block(3).is_linear = true;
M_.block_structure.block(3).NNZDerivatives = 2;
M_.block_structure.block(3).bytecode_jacob_cols_to_sparse = [3 4 ];
M_.block_structure.block(1).g1_sparse_rowval = int32([]);
M_.block_structure.block(1).g1_sparse_colval = int32([]);
M_.block_structure.block(1).g1_sparse_colptr = int32([]);
M_.block_structure.block(2).g1_sparse_rowval = int32([3 4 9 5 8 1 5 2 6 1 3 3 4 4 5 7 8 4 6 7 1 7 8 1 2 8 9 2 8 9 4 4 8 4 8 8 4 ]);
M_.block_structure.block(2).g1_sparse_colval = int32([4 4 4 5 5 10 10 11 11 12 12 13 13 14 14 14 14 15 15 15 16 16 16 17 17 17 17 18 18 18 22 23 23 24 25 26 27 ]);
M_.block_structure.block(2).g1_sparse_colptr = int32([1 1 1 1 4 6 6 6 6 6 8 10 12 14 18 21 24 28 31 31 31 31 32 34 35 36 37 38 ]);
M_.block_structure.block(3).g1_sparse_rowval = int32([]);
M_.block_structure.block(3).g1_sparse_colval = int32([]);
M_.block_structure.block(3).g1_sparse_colptr = int32([]);
M_.block_structure.variable_reordered = [ 7 14 16 9 12 10 3 5 1 4 6 2 11 8 15 13];
M_.block_structure.equation_reordered = [ 1 14 16 6 9 8 13 2 5 7 4 3 11 12 15 10];
M_.block_structure.incidence(1).lead_lag = -1;
M_.block_structure.incidence(1).sparse_IM = [
 2 1;
 5 1;
 7 4;
 11 4;
 12 1;
 14 14;
 15 4;
 16 16;
];
M_.block_structure.incidence(2).lead_lag = 0;
M_.block_structure.incidence(2).sparse_IM = [
 1 7;
 2 1;
 2 5;
 3 2;
 3 4;
 3 6;
 3 16;
 4 3;
 4 6;
 5 1;
 5 4;
 5 6;
 5 16;
 6 8;
 6 9;
 6 14;
 7 4;
 7 10;
 8 2;
 8 5;
 8 10;
 8 11;
 9 9;
 9 12;
 10 1;
 10 3;
 10 4;
 10 8;
 10 10;
 10 11;
 10 13;
 11 2;
 11 4;
 11 9;
 11 11;
 12 8;
 12 11;
 12 12;
 13 3;
 13 11;
 13 12;
 14 14;
 15 4;
 15 15;
 16 16;
];
M_.block_structure.incidence(3).lead_lag = 1;
M_.block_structure.incidence(3).sparse_IM = [
 5 1;
 5 4;
 5 6;
 5 8;
 5 16;
 11 2;
 11 4;
 11 11;
];
M_.block_structure.dyn_tmp_nbr = 7;
M_.state_var = [14 16 1 4 ];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(16, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(2, 1);
M_.params = NaN(12, 1);
M_.endo_trends = struct('deflator', cell(16, 1), 'log_deflator', cell(16, 1), 'growth_factor', cell(16, 1), 'log_growth_factor', cell(16, 1));
M_.NNZDerivatives = [63; 135; -1; ];
M_.dynamic_g1_sparse_rowval = int32([2 5 12 7 11 15 14 16 2 5 10 3 8 11 4 10 13 3 5 7 10 11 15 2 8 3 4 5 1 6 10 12 6 9 11 7 8 10 8 10 11 12 13 9 12 13 10 6 14 15 3 5 16 5 11 5 11 5 5 11 5 14 16 ]);
M_.dynamic_g1_sparse_colval = int32([1 1 1 4 4 4 14 16 17 17 17 18 18 18 19 19 19 20 20 20 20 20 20 21 21 22 22 22 23 24 24 24 25 25 25 26 26 26 27 27 27 27 27 28 28 28 29 30 30 31 32 32 32 33 34 36 36 38 40 43 48 49 50 ]);
M_.dynamic_g1_sparse_colptr = int32([1 4 4 4 7 7 7 7 7 7 7 7 7 7 8 8 9 12 15 18 24 26 29 30 33 36 39 44 47 48 50 51 54 55 56 56 58 58 59 59 60 60 60 61 61 61 61 61 62 63 64 ]);
M_.dynamic_g2_sparse_indices = int32([2 1 1 ;
2 1 17 ;
2 17 17 ;
3 18 18 ;
3 20 22 ;
3 20 32 ;
3 22 32 ;
3 32 32 ;
4 19 19 ;
4 19 22 ;
4 22 22 ;
5 1 20 ;
5 1 22 ;
5 1 32 ;
5 17 20 ;
5 17 36 ;
5 17 22 ;
5 17 38 ;
5 17 32 ;
5 17 48 ;
5 33 36 ;
5 33 38 ;
5 33 48 ;
5 20 22 ;
5 20 32 ;
5 36 38 ;
5 36 40 ;
5 36 48 ;
5 22 32 ;
5 38 40 ;
5 38 48 ;
5 40 48 ;
5 32 32 ;
5 48 48 ;
6 24 24 ;
6 24 30 ;
6 30 30 ;
7 4 4 ;
7 4 20 ;
7 20 20 ;
10 17 24 ;
10 20 27 ;
11 18 18 ;
11 18 34 ;
11 18 20 ;
11 18 36 ;
11 18 27 ;
11 18 43 ;
11 34 34 ;
11 34 20 ;
11 34 36 ;
11 34 27 ;
11 34 43 ;
11 4 4 ;
11 4 20 ;
11 20 20 ;
11 20 36 ;
11 20 25 ;
11 20 27 ;
11 20 43 ;
11 36 36 ;
11 36 27 ;
11 36 43 ;
11 27 27 ;
11 27 43 ;
12 1 1 ;
12 1 27 ;
12 1 28 ;
12 27 28 ;
13 19 19 ;
13 19 27 ;
13 19 28 ;
13 27 28 ;
14 14 14 ;
14 14 49 ;
15 4 4 ;
15 4 20 ;
16 16 16 ;
16 16 50 ;
]);
M_.lhs = {
'W'; 
'I'; 
'P*lambda/Z_D'; 
'1'; 
'P*lambda/Z_D*(1+phi_k*(K-K(-1)))'; 
'MC'; 
'Upsilon'; 
'q'; 
'mu'; 
'Pi_q'; 
'MC*theta/P'; 
'R_K'; 
'1'; 
'A'; 
'pi'; 
'Z_D'; 
};
M_.static_tmp_nbr = [4; 0; 0; 0; ];
M_.block_structure_stat.block(1).Simulation_Type = 1;
M_.block_structure_stat.block(1).endo_nbr = 2;
M_.block_structure_stat.block(1).mfs = 2;
M_.block_structure_stat.block(1).equation = [ 1 7];
M_.block_structure_stat.block(1).variable = [ 7 10];
M_.block_structure_stat.block(2).Simulation_Type = 3;
M_.block_structure_stat.block(2).endo_nbr = 1;
M_.block_structure_stat.block(2).mfs = 1;
M_.block_structure_stat.block(2).equation = [ 14];
M_.block_structure_stat.block(2).variable = [ 14];
M_.block_structure_stat.block(3).Simulation_Type = 1;
M_.block_structure_stat.block(3).endo_nbr = 1;
M_.block_structure_stat.block(3).mfs = 1;
M_.block_structure_stat.block(3).equation = [ 15];
M_.block_structure_stat.block(3).variable = [ 15];
M_.block_structure_stat.block(4).Simulation_Type = 3;
M_.block_structure_stat.block(4).endo_nbr = 1;
M_.block_structure_stat.block(4).mfs = 1;
M_.block_structure_stat.block(4).equation = [ 16];
M_.block_structure_stat.block(4).variable = [ 16];
M_.block_structure_stat.block(5).Simulation_Type = 6;
M_.block_structure_stat.block(5).endo_nbr = 10;
M_.block_structure_stat.block(5).mfs = 10;
M_.block_structure_stat.block(5).equation = [ 6 2 8 9 5 11 12 13 3 4];
M_.block_structure_stat.block(5).variable = [ 9 5 2 12 8 4 1 11 6 3];
M_.block_structure_stat.block(6).Simulation_Type = 1;
M_.block_structure_stat.block(6).endo_nbr = 1;
M_.block_structure_stat.block(6).mfs = 1;
M_.block_structure_stat.block(6).equation = [ 10];
M_.block_structure_stat.block(6).variable = [ 13];
M_.block_structure_stat.variable_reordered = [ 7 10 14 15 16 9 5 2 12 8 4 1 11 6 3 13];
M_.block_structure_stat.equation_reordered = [ 1 7 14 15 16 6 2 8 9 5 11 12 13 3 4 10];
M_.block_structure_stat.incidence.sparse_IM = [
 1 7;
 2 1;
 2 5;
 3 2;
 3 4;
 3 6;
 3 16;
 4 3;
 4 6;
 5 4;
 5 6;
 5 8;
 5 16;
 6 8;
 6 9;
 6 14;
 7 10;
 8 2;
 8 5;
 8 10;
 8 11;
 9 9;
 9 12;
 10 1;
 10 3;
 10 4;
 10 8;
 10 10;
 10 11;
 10 13;
 11 4;
 11 9;
 12 1;
 12 8;
 12 11;
 12 12;
 13 3;
 13 11;
 13 12;
 14 14;
 15 15;
 16 16;
];
M_.block_structure_stat.tmp_nbr = 3;
M_.block_structure_stat.block(1).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(1).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(2).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(2).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(3).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(3).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(3).g1_sparse_colptr = int32([]);
M_.block_structure_stat.block(4).g1_sparse_rowval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colval = int32([1 ]);
M_.block_structure_stat.block(4).g1_sparse_colptr = int32([1 2 ]);
M_.block_structure_stat.block(5).g1_sparse_rowval = int32([1 4 6 2 3 3 9 4 7 8 1 5 7 5 6 9 2 7 3 7 8 5 9 10 8 10 ]);
M_.block_structure_stat.block(5).g1_sparse_colval = int32([1 1 1 2 2 3 3 4 4 4 5 5 5 6 6 6 7 7 8 8 8 9 9 9 10 10 ]);
M_.block_structure_stat.block(5).g1_sparse_colptr = int32([1 4 6 8 11 14 17 19 22 25 27 ]);
M_.block_structure_stat.block(6).g1_sparse_rowval = int32([]);
M_.block_structure_stat.block(6).g1_sparse_colval = int32([]);
M_.block_structure_stat.block(6).g1_sparse_colptr = int32([]);
M_.static_g1_sparse_rowval = int32([2 10 12 3 8 4 10 13 3 5 10 11 2 8 3 4 5 1 5 6 10 12 6 9 11 7 8 10 8 10 12 13 9 12 13 10 6 14 15 3 5 16 ]);
M_.static_g1_sparse_colval = int32([1 1 1 2 2 3 3 3 4 4 4 4 5 5 6 6 6 7 8 8 8 8 9 9 9 10 10 10 11 11 11 11 12 12 12 13 14 14 15 16 16 16 ]);
M_.static_g1_sparse_colptr = int32([1 4 6 9 13 15 18 19 23 26 29 33 36 37 39 40 43 ]);
load params.mat;
load SSvar.mat;
M_.params(1) = params(1);
sigma = M_.params(1);
M_.params(2) = params(2);
beta = M_.params(2);
M_.params(3) = params(3);
delta = M_.params(3);
M_.params(4) = params(4);
alpha = M_.params(4);
M_.params(5) = params(5);
psi_l = M_.params(5);
M_.params(6) = params(6);
eta = M_.params(6);
M_.params(7) = params(7);
rho = M_.params(7);
M_.params(8) = params(8);
Ass = M_.params(8);
M_.params(9) = params(9);
phi_q = M_.params(9);
M_.params(10) = params(10);
theta = M_.params(10);
M_.params(11) = params(11);
phi_k = M_.params(11);
M_.params(12) = 0.75;
rho_D = M_.params(12);
%
% INITVAL instructions
%
options_.initval_file = false;
oo_.steady_state(1) = SSvar(1);
oo_.steady_state(2) = SSvar(2);
oo_.steady_state(3) = SSvar(3);
oo_.steady_state(4) = SSvar(4);
oo_.steady_state(5) = SSvar(5);
oo_.steady_state(6) = SSvar(6);
oo_.steady_state(7) = SSvar(7);
oo_.steady_state(8) = SSvar(8);
oo_.steady_state(9) = SSvar(9);
oo_.steady_state(10) = SSvar(10);
oo_.steady_state(11) = SSvar(11);
oo_.steady_state(12) = SSvar(12);
oo_.steady_state(13) = SSvar(13);
oo_.steady_state(14) = SSvar(14);
oo_.steady_state(16) = 1;
if M_.exo_nbr > 0
	oo_.exo_simul = ones(M_.maximum_lag,1)*oo_.exo_steady_state';
end
if M_.exo_det_nbr > 0
	oo_.exo_det_simul = ones(M_.maximum_lag,1)*oo_.exo_det_steady_state';
end
model_diagnostics(M_,options_,oo_);
options_resid_ = struct();
options_resid_.non_zero = true;
display_static_residuals(M_, options_, oo_, options_resid_);
oo_.dr.eigval = check(M_,options_,oo_);
steady;
%
% SHOCKS instructions
%
M_.exo_det_length = 0;
M_.Sigma_e(1, 1) = 0.01;
M_.Sigma_e(2, 2) = 0.10;
options_.irf = 40;
options_.order = 2;
options_.periods = 1000;
var_list_ = {'A';'q';'C';'I';'K';'L';'MC';'P';'pi'};
[info, oo_, options_, M_] = stoch_simul(M_, options_, oo_, var_list_);


oo_.time = toc(tic0);
disp(['Total computing time : ' dynsec2hms(oo_.time) ]);
if ~exist([M_.dname filesep 'Output'],'dir')
    mkdir(M_.dname,'Output');
end
save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'oo_recursive_', '-append');
end
if exist('options_mom_', 'var') == 1
  save([M_.dname filesep 'Output' filesep 'ModelRBCPrice_results.mat'], 'options_mom_', '-append');
end
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
